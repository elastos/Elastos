// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sidechain_eth.proto

package sidechain_eth

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The request message
type Request struct {
	Input                string   `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_21eaa0627d5e5698, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetInput() string {
	if m != nil {
		return m.Input
	}
	return ""
}

// The response message
type Response struct {
	Output               string   `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
	StatusMessage        string   `protobuf:"bytes,2,opt,name=status_message,json=statusMessage,proto3" json:"status_message,omitempty"`
	Status               bool     `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_21eaa0627d5e5698, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetOutput() string {
	if m != nil {
		return m.Output
	}
	return ""
}

func (m *Response) GetStatusMessage() string {
	if m != nil {
		return m.StatusMessage
	}
	return ""
}

func (m *Response) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func init() {
	proto.RegisterType((*Request)(nil), "sidechain_eth.Request")
	proto.RegisterType((*Response)(nil), "sidechain_eth.Response")
}

func init() { proto.RegisterFile("sidechain_eth.proto", fileDescriptor_21eaa0627d5e5698) }

var fileDescriptor_21eaa0627d5e5698 = []byte{
	// 206 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2e, 0xce, 0x4c, 0x49,
	0x4d, 0xce, 0x48, 0xcc, 0xcc, 0x8b, 0x4f, 0x2d, 0xc9, 0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0xe2, 0x45, 0x11, 0x54, 0x92, 0xe7, 0x62, 0x0f, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12,
	0xe1, 0x62, 0xcd, 0xcc, 0x2b, 0x28, 0x2d, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x82, 0x70,
	0x94, 0x12, 0xb9, 0x38, 0x82, 0x52, 0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x85, 0xc4, 0xb8, 0xd8,
	0xf2, 0x4b, 0x4b, 0x10, 0x4a, 0xa0, 0x3c, 0x21, 0x55, 0x2e, 0xbe, 0xe2, 0x92, 0xc4, 0x92, 0xd2,
	0xe2, 0xf8, 0xdc, 0xd4, 0xe2, 0xe2, 0xc4, 0xf4, 0x54, 0x09, 0x26, 0xb0, 0x3c, 0x2f, 0x44, 0xd4,
	0x17, 0x22, 0x08, 0xd2, 0x0e, 0x11, 0x90, 0x60, 0x56, 0x60, 0xd4, 0xe0, 0x08, 0x82, 0xf2, 0x8c,
	0xe6, 0x32, 0x72, 0xf1, 0x04, 0xc3, 0x5c, 0xe5, 0x5a, 0x92, 0x21, 0xe4, 0xc6, 0x25, 0xe8, 0x92,
	0x5a, 0x90, 0x93, 0x5f, 0xe9, 0x5a, 0x92, 0xe1, 0x9c, 0x9f, 0x57, 0x52, 0x94, 0x98, 0x5c, 0x22,
	0x24, 0xa6, 0x87, 0xea, 0x1d, 0xa8, 0xb3, 0xa5, 0xc4, 0x31, 0xc4, 0x21, 0xae, 0x55, 0x62, 0x10,
	0x72, 0xe5, 0x12, 0x08, 0x4f, 0x2c, 0x49, 0xce, 0xa0, 0xcc, 0x98, 0x24, 0x36, 0x70, 0xc8, 0x19,
	0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x18, 0xe4, 0x1a, 0x74, 0x50, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SidechainEthClient is the client API for SidechainEth service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SidechainEthClient interface {
	DeployEthContract(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	WatchEthContract(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type sidechainEthClient struct {
	cc *grpc.ClientConn
}

func NewSidechainEthClient(cc *grpc.ClientConn) SidechainEthClient {
	return &sidechainEthClient{cc}
}

func (c *sidechainEthClient) DeployEthContract(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/sidechain_eth.SidechainEth/DeployEthContract", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sidechainEthClient) WatchEthContract(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/sidechain_eth.SidechainEth/WatchEthContract", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SidechainEthServer is the server API for SidechainEth service.
type SidechainEthServer interface {
	DeployEthContract(context.Context, *Request) (*Response, error)
	WatchEthContract(context.Context, *Request) (*Response, error)
}

// UnimplementedSidechainEthServer can be embedded to have forward compatible implementations.
type UnimplementedSidechainEthServer struct {
}

func (*UnimplementedSidechainEthServer) DeployEthContract(ctx context.Context, req *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeployEthContract not implemented")
}
func (*UnimplementedSidechainEthServer) WatchEthContract(ctx context.Context, req *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WatchEthContract not implemented")
}

func RegisterSidechainEthServer(s *grpc.Server, srv SidechainEthServer) {
	s.RegisterService(&_SidechainEth_serviceDesc, srv)
}

func _SidechainEth_DeployEthContract_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SidechainEthServer).DeployEthContract(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sidechain_eth.SidechainEth/DeployEthContract",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SidechainEthServer).DeployEthContract(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _SidechainEth_WatchEthContract_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SidechainEthServer).WatchEthContract(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sidechain_eth.SidechainEth/WatchEthContract",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SidechainEthServer).WatchEthContract(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _SidechainEth_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sidechain_eth.SidechainEth",
	HandlerType: (*SidechainEthServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DeployEthContract",
			Handler:    _SidechainEth_DeployEthContract_Handler,
		},
		{
			MethodName: "WatchEthContract",
			Handler:    _SidechainEth_WatchEthContract_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sidechain_eth.proto",
}
