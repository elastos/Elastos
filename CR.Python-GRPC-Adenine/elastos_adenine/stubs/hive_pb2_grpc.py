# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import hive_pb2 as hive__pb2


class HiveStub(object):
  """The service definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.UploadAndSign = channel.unary_unary(
        '/hive.Hive/UploadAndSign',
        request_serializer=hive__pb2.Request.SerializeToString,
        response_deserializer=hive__pb2.Response.FromString,
        )
    self.VerifyAndShow = channel.unary_unary(
        '/hive.Hive/VerifyAndShow',
        request_serializer=hive__pb2.Request.SerializeToString,
        response_deserializer=hive__pb2.Response.FromString,
        )


class HiveServicer(object):
  """The service definition.
  """

  def UploadAndSign(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def VerifyAndShow(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_HiveServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'UploadAndSign': grpc.unary_unary_rpc_method_handler(
          servicer.UploadAndSign,
          request_deserializer=hive__pb2.Request.FromString,
          response_serializer=hive__pb2.Response.SerializeToString,
      ),
      'VerifyAndShow': grpc.unary_unary_rpc_method_handler(
          servicer.VerifyAndShow,
          request_deserializer=hive__pb2.Request.FromString,
          response_serializer=hive__pb2.Response.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'hive.Hive', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
