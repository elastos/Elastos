# Copyright 2003, 2005 Douglas Gregor
# Copyright 2004 John Maddock
# Copyright 2002, 2003, 2004, 2007 Vladimir Prus
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE_1_0.txt or http://www.boost.org/LICENSE_1_0.txt)

#   This file is used to configure your Boost.Build installation. You can modify
# this file in place, or you can place it in a permanent location so that it
# does not get overwritten should you get a new version of Boost.Build. See:
#
#   http://www.boost.org/boost-build2/doc/html/bbv2/overview/configuration.html
#
# for documentation about possible permanent locations.

#   This file specifies which toolsets (C++ compilers), libraries, and other
# tools are available. Often, you should be able to just uncomment existing
# example lines and adjust them to taste. The complete list of supported tools,
# and configuration instructions can be found at:
#
#   http://boost.org/boost-build2/doc/html/bbv2/reference/tools.html
#

#   This file uses Jam language syntax to describe available tools. Mostly,
# there are 'using' lines, that contain the name of the used tools, and
# parameters to pass to those tools -- where paremeters are separated by
# semicolons. Important syntax notes:
#
#   - Both ':' and ';' must be separated from other tokens by whitespace
#   - The '\' symbol is a quote character, so when specifying Windows paths you
#     should use '/' or '\\' instead.
#
# More details about the syntax can be found at:
#
#   http://boost.org/boost-build2/doc/html/bbv2/advanced.html#bbv2.advanced.jam_language
#
# ------------------
# Android configurations.
# ------------------

import os ;
local ANDROID_NDK_HOME = [ os.environ ANDROID_NDK_HOME ] ;
local ANDROID_TOOLCHAIN_BIN_PATH = [ os.environ ANDROID_TOOLCHAIN_BIN_PATH ] ;
local ANDROID_TOOLCHAIN_RANLIB = [ os.environ ANDROID_TOOLCHAIN_RANLIB ] ;
local ANDROID_SYSTEM_VERSION = [ os.environ ANDROID_SYSTEM_VERSION ] ;
local GCC_TOOLCHAIN_BIN_PATH = [ os.environ GCC_TOOLCHAIN_BIN_PATH ] ;

# --------------------------------------------------------------------

using clang : arm64v8a
:
$(ANDROID_TOOLCHAIN_BIN_PATH)/clang++
:
<archiver>$(ANDROID_TOOLCHAIN_BIN_PATH)/llvm-ar
<compileflags>-fexceptions
<compileflags>-frtti
<compileflags>-ffunction-sections
<compileflags>-funwind-tables
<compileflags>-fstack-protector-strong
<compileflags>-Wno-invalid-command-line-argument
<compileflags>-Wno-unused-command-line-argument
<compileflags>-no-canonical-prefixes
<compileflags>-I$(ANDROID_NDK_HOME)/sources/cxx-stl/llvm-libc++/include
<compileflags>-I$(ANDROID_NDK_HOME)/sources/cxx-stl/llvm-libc++abi/include
<compileflags>-I$(ANDROID_NDK_HOME)/sources/android/support/include
<compileflags>-DANDROID
<compileflags>-Wa,--noexecstack
<compileflags>-Wformat
<compileflags>-Werror=format-security
<compileflags>-DNDEBUG
<compileflags>-O2
<compileflags>-g
<ranlib>$(ANDROID_TOOLCHAIN_RANLIB)
<compileflags>-gcc-toolchain
<compileflags>$(GCC_TOOLCHAIN_BIN_PATH)/..
<compileflags>-target
<compileflags>aarch64-none-linux-android
<compileflags>-fpic
<compileflags>--sysroot
<compileflags>$(ANDROID_NDK_HOME)/sysroot
<compileflags>-isystem
<compileflags>$(ANDROID_NDK_HOME)/sysroot/usr/include/aarch64-linux-android
<compileflags>-D__ANDROID_API__=$(ANDROID_SYSTEM_VERSION)
;

# --------------------------------------------------------------------

using clang : armeabiv7a
:
$(ANDROID_TOOLCHAIN_BIN_PATH)/clang++
:
<archiver>$(ANDROID_TOOLCHAIN_BIN_PATH)/llvm-ar
<compileflags>-fexceptions
<compileflags>-frtti
<compileflags>-ffunction-sections
<compileflags>-funwind-tables
<compileflags>-fstack-protector-strong
<compileflags>-Wno-invalid-command-line-argument
<compileflags>-Wno-unused-command-line-argument
<compileflags>-no-canonical-prefixes
<compileflags>-I$(ANDROID_NDK_HOME)/sources/cxx-stl/llvm-libc++/include
<compileflags>-I$(ANDROID_NDK_HOME)/sources/cxx-stl/llvm-libc++abi/include
<compileflags>-I$(ANDROID_NDK_HOME)/sources/android/support/include
<compileflags>-DANDROID
<compileflags>-Wa,--noexecstack
<compileflags>-Wformat
<compileflags>-Werror=format-security
<compileflags>-DNDEBUG
<compileflags>-O2
<compileflags>-g
<ranlib>$(ANDROID_TOOLCHAIN_RANLIB)
<compileflags>-gcc-toolchain
<compileflags>$(GCC_TOOLCHAIN_BIN_PATH)/..
<compileflags>-target
<compileflags>armv7-none-linux-androideabi
<compileflags>-march=armv7-a
<compileflags>-mfloat-abi=softfp
<compileflags>-mfpu=vfpv3-d16
<compileflags>-mthumb
<compileflags>-fpic
<compileflags>-fno-integrated-as
<compileflags>--sysroot
<compileflags>$(ANDROID_NDK_HOME)/sysroot
<compileflags>-isystem
<compileflags>$(ANDROID_NDK_HOME)/sysroot/usr/include/arm-linux-androideabi
<compileflags>-D__ANDROID_API__=$(ANDROID_SYSTEM_VERSION)
;

# --------------------------------------------------------------------

using clang : armeabi
:
$(ANDROID_TOOLCHAIN_BIN_PATH)/clang++
:
<archiver>$(ANDROID_TOOLCHAIN_BIN_PATH)/llvm-ar
<compileflags>-fexceptions
<compileflags>-frtti
<compileflags>-ffunction-sections
<compileflags>-funwind-tables
<compileflags>-fstack-protector-strong
<compileflags>-Wno-invalid-command-line-argument
<compileflags>-Wno-unused-command-line-argument
<compileflags>-no-canonical-prefixes
<compileflags>-I$(ANDROID_NDK_HOME)/sources/cxx-stl/llvm-libc++/include
<compileflags>-I$(ANDROID_NDK_HOME)/sources/cxx-stl/llvm-libc++abi/include
<compileflags>-I$(ANDROID_NDK_HOME)/sources/android/support/include
<compileflags>-DANDROID
<compileflags>-Wa,--noexecstack
<compileflags>-Wformat
<compileflags>-Werror=format-security
<compileflags>-DNDEBUG
<compileflags>-O2
<compileflags>-g
<ranlib>$(ANDROID_TOOLCHAIN_RANLIB)
<compileflags>-gcc-toolchain
<compileflags>$(GCC_TOOLCHAIN_BIN_PATH)/..
<compileflags>-target
<compileflags>armv5te-none-linux-androideabi
<compileflags>-march=armv5te
<compileflags>-mtune=xscale
<compileflags>-msoft-float
<compileflags>-mthumb
<compileflags>-fpic
<compileflags>-fno-integrated-as
<compileflags>--sysroot
<compileflags>$(ANDROID_NDK_HOME)/sysroot
<compileflags>-isystem
<compileflags>$(ANDROID_NDK_HOME)/sysroot/usr/include/arm-linux-androideabi
<compileflags>-D__ANDROID_API__=$(ANDROID_SYSTEM_VERSION)
;

# --------------------------------------------------------------------

using clang : x86
:
$(ANDROID_TOOLCHAIN_BIN_PATH)/clang++
:
<archiver>$(ANDROID_TOOLCHAIN_BIN_PATH)/llvm-ar
<compileflags>-fexceptions
<compileflags>-frtti
<compileflags>-ffunction-sections
<compileflags>-funwind-tables
<compileflags>-fstack-protector-strong
<compileflags>-Wno-invalid-command-line-argument
<compileflags>-Wno-unused-command-line-argument
<compileflags>-no-canonical-prefixes
<compileflags>-I$(ANDROID_NDK_HOME)/sources/cxx-stl/llvm-libc++/include
<compileflags>-I$(ANDROID_NDK_HOME)/sources/cxx-stl/llvm-libc++abi/include
<compileflags>-I$(ANDROID_NDK_HOME)/sources/android/support/include
<compileflags>-DANDROID
<compileflags>-Wa,--noexecstack
<compileflags>-Wformat
<compileflags>-Werror=format-security
<compileflags>-DNDEBUG
<compileflags>-O2
<compileflags>-g
<ranlib>$(ANDROID_TOOLCHAIN_RANLIB)
<compileflags>-gcc-toolchain
<compileflags>$(GCC_TOOLCHAIN_BIN_PATH)/..
<compileflags>-target
<compileflags>i686-none-linux-android
<compileflags>-fPIC
<compileflags>-mstackrealign
<compileflags>--sysroot
<compileflags>$(ANDROID_NDK_HOME)/sysroot
<compileflags>-isystem
<compileflags>$(ANDROID_NDK_HOME)/sysroot/usr/include/i686-linux-android
<compileflags>-D__ANDROID_API__=$(ANDROID_SYSTEM_VERSION)
;

# --------------------------------------------------------------------

using clang : x8664
:
$(ANDROID_TOOLCHAIN_BIN_PATH)/clang++
:
<archiver>$(ANDROID_TOOLCHAIN_BIN_PATH)/llvm-ar
<compileflags>-fexceptions
<compileflags>-frtti
<compileflags>-ffunction-sections
<compileflags>-funwind-tables
<compileflags>-fstack-protector-strong
<compileflags>-Wno-invalid-command-line-argument
<compileflags>-Wno-unused-command-line-argument
<compileflags>-no-canonical-prefixes
<compileflags>-I$(ANDROID_NDK_HOME)/sources/cxx-stl/llvm-libc++/include
<compileflags>-I$(ANDROID_NDK_HOME)/sources/cxx-stl/llvm-libc++abi/include
<compileflags>-I$(ANDROID_NDK_HOME)/sources/android/support/include
<compileflags>-DANDROID
<compileflags>-Wa,--noexecstack
<compileflags>-Wformat
<compileflags>-Werror=format-security
<compileflags>-DNDEBUG
<compileflags>-O2
<compileflags>-g
<ranlib>$(ANDROID_TOOLCHAIN_RANLIB)
<compileflags>-gcc-toolchain
<compileflags>$(ANDROID_TOOLCHAIN_BIN_PATH)/..
<compileflags>-target
<compileflags>x86_64-none-linux-android
<compileflags>-fPIC
<compileflags>--sysroot
<compileflags>$(ANDROID_NDK_HOME)/sysroot
<compileflags>-isystem
<compileflags>$(ANDROID_NDK_HOME)/sysroot/usr/include/x86_64-linux-android
<compileflags>-D__ANDROID_API__=$(ANDROID_SYSTEM_VERSION)
;
